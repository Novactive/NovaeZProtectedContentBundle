parameters:

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $httpCachePurgeClient: '@ezplatform.http_cache.purge_client'
            $entityManager: "@novaezprotectedcontent.doctrine.entity_manager"

    Novactive\Bundle\eZProtectedContentBundle\Command\:
        resource: '../../Command'

    Novactive\Bundle\eZProtectedContentBundle\Repository\:
        resource: '../../Repository'

    Novactive\Bundle\eZProtectedContentBundle\Controller\:
        resource: '../../Controller'
        tags: ['controller.service_arguments']

    Novactive\Bundle\eZProtectedContentBundle\Core\Tab\ProtectContent:
        tags:
            - { name: ezplatform.tab, group: location-view }

    Novactive\Bundle\eZProtectedContentBundle\Listener\EntityContentLink:
        tags:
            - { name: doctrine.orm.entity_listener }

    Novactive\Bundle\eZProtectedContentBundle\Listener\PreContentView:
        tags:
            - { name: kernel.event_listener, event: ezpublish.pre_content_view, method: onPreContentView }

    Novactive\Bundle\eZProtectedContentBundle\Listener\PasswordProvided:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: 'onKernelRequest', priority: -100}

    novaezprotectedcontent.doctrine.entity_manager:
        class: Doctrine\ORM\EntityManagerInterface
        factory: ['@Novactive\Bundle\eZSEOBundle\Core\SiteAccessAwareEntityManagerFactory', 'get']

    Novactive\Bundle\eZProtectedContentBundle\Core\SiteAccessAwareEntityManagerFactory:
        arguments:
            $repositoryConfigurationProvider: "@ezpublish.api.repository_configuration_provider"
            $resolver: "@doctrine.orm.default_entity_listener_resolver"
            $settings: { debug: "%kernel.debug%", cache_dir: "%kernel.cache_dir%" }
